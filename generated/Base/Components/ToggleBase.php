<?php
// This file is auto-generated by generate-classes.php. Do not edit it.

namespace Lenra\App\Base\Components;

use Lenra\App\Components\Base\Builder;

/**
* @template-extends Builder<\Lenra\App\Response\View\Model\ComponentsToggle>
*/
abstract class ToggleBase extends Builder {
  public function __construct(bool $value)
  {
    parent::__construct(Null, \Lenra\App\Response\View\Model\ComponentsToggle::class, Lenra\App\Response\View\Normalizer\ComponentsToggleNormalizer::class);
    $this->data->setValue($value);
  }

  public function splashRadius(float $splashRadius): ToggleBase {
    if ($splashRadius instanceof Builder) $splashRadius = $splashRadius->data;
    $this->data->setSplashRadius($splashRadius);
    return $this;
  }

  public function autofocus(bool $autofocus): ToggleBase {
    if ($autofocus instanceof Builder) $autofocus = $autofocus->data;
    $this->data->setAutofocus($autofocus);
    return $this;
  }

  public function dragStartBehavior(string $dragStartBehavior): ToggleBase {
    if ($dragStartBehavior instanceof Builder) $dragStartBehavior = $dragStartBehavior->data;
    $this->data->setDragStartBehavior($dragStartBehavior);
    return $this;
  }

  public function onPressed(\Lenra\App\Components\Listener $onPressed): ToggleBase {
    if ($onPressed instanceof Builder) $onPressed = $onPressed->data;
    $this->data->setOnPressed($onPressed);
    return $this;
  }

  public function style(\Lenra\App\Components\Styles\ToggleStyle $style): ToggleBase {
    if ($style instanceof Builder) $style = $style->data;
    $this->data->setStyle($style);
    return $this;
  }

  public function name(string $name): ToggleBase {
    if ($name instanceof Builder) $name = $name->data;
    $this->data->setName($name);
    return $this;
  }

  public function disabled(bool $disabled): ToggleBase {
    if ($disabled instanceof Builder) $disabled = $disabled->data;
    $this->data->setDisabled($disabled);
    return $this;
  }

}
