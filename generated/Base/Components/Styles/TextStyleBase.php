<?php
// This file is auto-generated by generate-classes.php. Do not edit it.

namespace Lenra\App\Base\Components\Styles;

use Lenra\App\Components\Base\Builder;

abstract class TextStyleBase extends Builder {
  public function __construct()
  {
    parent::__construct();
  }

  public function color(int $color): self {
    $this->data['color'] = $color;
    return $this;
  }

  public function decoration(string $decoration): self {
    $this->data['decoration'] = $decoration;
    return $this;
  }

  public function decorationColor(int $decorationColor): self {
    $this->data['decorationColor'] = $decorationColor;
    return $this;
  }

  public function decorationStyle(string $decorationStyle): self {
    $this->data['decorationStyle'] = $decorationStyle;
    return $this;
  }

  public function decorationThickness(float $decorationThickness): self {
    $this->data['decorationThickness'] = $decorationThickness;
    return $this;
  }

  public function fontFamily(string $fontFamily): self {
    $this->data['fontFamily'] = $fontFamily;
    return $this;
  }

  public function fontFamilyFallback(array $fontFamilyFallback): self {
    $this->data['fontFamilyFallback'] = $fontFamilyFallback;
    return $this;
  }

  public function fontSize(float $fontSize): self {
    $this->data['fontSize'] = $fontSize;
    return $this;
  }

  public function fontStyle(string $fontStyle): self {
    $this->data['fontStyle'] = $fontStyle;
    return $this;
  }

  public function fontWeight(string $fontWeight): self {
    $this->data['fontWeight'] = $fontWeight;
    return $this;
  }

  public function height(float $height): self {
    $this->data['height'] = $height;
    return $this;
  }

  public function letterSpacing(float $letterSpacing): self {
    $this->data['letterSpacing'] = $letterSpacing;
    return $this;
  }

  public function overflow(string $overflow): self {
    $this->data['overflow'] = $overflow;
    return $this;
  }

  public function shadows(array $shadows): self {
    $this->data['shadows'] = $shadows;
    return $this;
  }

  public function textBaseline(string $textBaseline): self {
    $this->data['textBaseline'] = $textBaseline;
    return $this;
  }

  public function wordSpacing(float $wordSpacing): self {
    $this->data['wordSpacing'] = $wordSpacing;
    return $this;
  }

}
