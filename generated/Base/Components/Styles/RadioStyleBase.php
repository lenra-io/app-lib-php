<?php
// This file is auto-generated by generate-classes.php. Do not edit it.

namespace Lenra\App\Base\Components\Styles;

use Lenra\App\Components\Base\Builder;

/**
* @template-extends Builder<\Lenra\App\Response\View\Model\ComponentsStylesRadioStyle>
*/
abstract class RadioStyleBase extends Builder {
  public function __construct()
  {
    parent::__construct(Null, \Lenra\App\Response\View\Model\ComponentsStylesRadioStyle::class, Lenra\App\Response\View\Normalizer\ComponentsStylesRadioStyleNormalizer::class);
  }

  public function activeColor(int $activeColor): RadioStyleBase {
    if ($activeColor instanceof Builder) $activeColor = $activeColor->data;
    $this->data->setActiveColor($activeColor);
    return $this;
  }

  public function focusColor(int $focusColor): RadioStyleBase {
    if ($focusColor instanceof Builder) $focusColor = $focusColor->data;
    $this->data->setFocusColor($focusColor);
    return $this;
  }

  public function hovercolor(int $hovercolor): RadioStyleBase {
    if ($hovercolor instanceof Builder) $hovercolor = $hovercolor->data;
    $this->data->setHovercolor($hovercolor);
    return $this;
  }

  public function unselectedColor(int $unselectedColor): RadioStyleBase {
    if ($unselectedColor instanceof Builder) $unselectedColor = $unselectedColor->data;
    $this->data->setUnselectedColor($unselectedColor);
    return $this;
  }

  public function splashRadius(float $splashRadius): RadioStyleBase {
    if ($splashRadius instanceof Builder) $splashRadius = $splashRadius->data;
    $this->data->setSplashRadius($splashRadius);
    return $this;
  }

  public function visualDensity(string $visualDensity): RadioStyleBase {
    if ($visualDensity instanceof Builder) $visualDensity = $visualDensity->data;
    $this->data->setVisualDensity($visualDensity);
    return $this;
  }

}
