<?php
// This file is auto-generated by generate-classes.php. Do not edit it.

namespace Lenra\App\Base\Components\Styles;

use Lenra\App\Components\Base\Builder;

/**
* @template-extends Builder<\Lenra\App\Response\View\Model\ComponentsStylesTextFieldStyle>
*/
abstract class TextFieldStyleBase extends Builder {
  public function __construct()
  {
    parent::__construct(Null, \Lenra\App\Response\View\Model\ComponentsStylesTextFieldStyle::class);
  }

  public function cursorColor(int $cursorColor): TextFieldStyleBase {
    $this->data->setCursorColor(Builder::convert($cursorColor));
    return $this;
  }

  public function cursorHeight(float $cursorHeight): TextFieldStyleBase {
    $this->data->setCursorHeight(Builder::convert($cursorHeight));
    return $this;
  }

  public function cursorRadius(\Lenra\App\Components\Styles\Radius $cursorRadius): TextFieldStyleBase {
    $this->data->setCursorRadius(Builder::convert($cursorRadius));
    return $this;
  }

  public function cursorWidth(float $cursorWidth): TextFieldStyleBase {
    $this->data->setCursorWidth(Builder::convert($cursorWidth));
    return $this;
  }

  public function decoration(\Lenra\App\Components\Styles\InputDecoration $decoration): TextFieldStyleBase {
    $this->data->setDecoration(Builder::convert($decoration));
    return $this;
  }

  public function keyboardAppearance(string $keyboardAppearance): TextFieldStyleBase {
    $this->data->setKeyboardAppearance(Builder::convert($keyboardAppearance));
    return $this;
  }

  public function obscuringCharacter(string $obscuringCharacter): TextFieldStyleBase {
    $this->data->setObscuringCharacter(Builder::convert($obscuringCharacter));
    return $this;
  }

  public function scrollPadding(\Lenra\App\Components\Styles\Padding $scrollPadding): TextFieldStyleBase {
    $this->data->setScrollPadding(Builder::convert($scrollPadding));
    return $this;
  }

  public function selectionHeightStyle(string $selectionHeightStyle): TextFieldStyleBase {
    $this->data->setSelectionHeightStyle(Builder::convert($selectionHeightStyle));
    return $this;
  }

  public function selectionWidthStyle(string $selectionWidthStyle): TextFieldStyleBase {
    $this->data->setSelectionWidthStyle(Builder::convert($selectionWidthStyle));
    return $this;
  }

  public function strutStyle(\Lenra\App\Components\Styles\StrutStyle $strutStyle): TextFieldStyleBase {
    $this->data->setStrutStyle(Builder::convert($strutStyle));
    return $this;
  }

  public function textStyle(\Lenra\App\Components\Styles\TextStyle $textStyle): TextFieldStyleBase {
    $this->data->setTextStyle(Builder::convert($textStyle));
    return $this;
  }

  public function textAlign(string $textAlign): TextFieldStyleBase {
    $this->data->setTextAlign(Builder::convert($textAlign));
    return $this;
  }

  public function textAlignVertical(string $textAlignVertical): TextFieldStyleBase {
    $this->data->setTextAlignVertical(Builder::convert($textAlignVertical));
    return $this;
  }

}
