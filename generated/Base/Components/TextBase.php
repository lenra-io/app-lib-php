<?php
// This file is auto-generated by generate-classes.php. Do not edit it.

namespace Lenra\App\Base\Components;

use Lenra\App\Components\Base\Builder;

/**
* @template-extends Builder<\Lenra\App\Response\View\Model\ComponentsText>
*/
abstract class TextBase extends Builder {
  public function __construct(string $value)
  {
    parent::__construct(Null, \Lenra\App\Response\View\Model\ComponentsText::class, Lenra\App\Response\View\Normalizer\ComponentsTextNormalizer::class);
    $this->data->setValue($value);
  }

  public function style(\Lenra\App\Components\Styles\TextStyle $style): TextBase {
    if ($style instanceof Builder) $style = $style->data;
    $this->data->setStyle($style);
    return $this;
  }

  public function locale(\Lenra\App\Components\Styles\Locale $locale): TextBase {
    if ($locale instanceof Builder) $locale = $locale->data;
    $this->data->setLocale($locale);
    return $this;
  }

  public function semanticsLabel(string $semanticsLabel): TextBase {
    if ($semanticsLabel instanceof Builder) $semanticsLabel = $semanticsLabel->data;
    $this->data->setSemanticsLabel($semanticsLabel);
    return $this;
  }

  public function spellOut(bool $spellOut): TextBase {
    if ($spellOut instanceof Builder) $spellOut = $spellOut->data;
    $this->data->setSpellOut($spellOut);
    return $this;
  }

  public function textAlign($textAlign): TextBase {
    if ($textAlign instanceof Builder) $textAlign = $textAlign->data;
    $this->data->setTextAlign($textAlign);
    return $this;
  }

  public function children(array $children): TextBase {
    if ($children instanceof Builder) $children = $children->data;
    $this->data->setChildren($children);
    return $this;
  }

}
