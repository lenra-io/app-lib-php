<?php
// This file is auto-generated by generate-classes.php. Do not edit it.

namespace Lenra\App\Base\Components;

use Lenra\App\Components\Base\Builder;

/**
* @template-extends Builder<\Lenra\App\Response\View\Model\ComponentsSlider>
*/
abstract class SliderBase extends Builder {
  public function __construct()
  {
    parent::__construct('slider', \Lenra\App\Response\View\Model\ComponentsSlider::class);
  }

  public function style(\Lenra\App\Components\Styles\SliderStyle $style): SliderBase {
    $this->data->setStyle(Builder::convert($style));
    return $this;
  }

  public function autofocus(bool $autofocus): SliderBase {
    $this->data->setAutofocus(Builder::convert($autofocus));
    return $this;
  }

  public function divisions(float $divisions): SliderBase {
    $this->data->setDivisions(Builder::convert($divisions));
    return $this;
  }

  public function label(string $label): SliderBase {
    $this->data->setLabel(Builder::convert($label));
    return $this;
  }

  public function min(float $min): SliderBase {
    $this->data->setMin(Builder::convert($min));
    return $this;
  }

  public function max(float $max): SliderBase {
    $this->data->setMax(Builder::convert($max));
    return $this;
  }

  public function onChanged(\Lenra\App\Components\Listener $onChanged): SliderBase {
    $this->data->setOnChanged(Builder::convert($onChanged));
    return $this;
  }

  public function onChangeEnd(\Lenra\App\Components\Listener $onChangeEnd): SliderBase {
    $this->data->setOnChangeEnd(Builder::convert($onChangeEnd));
    return $this;
  }

  public function onChangeStart(\Lenra\App\Components\Listener $onChangeStart): SliderBase {
    $this->data->setOnChangeStart(Builder::convert($onChangeStart));
    return $this;
  }

  public function value(float $value): SliderBase {
    $this->data->setValue(Builder::convert($value));
    return $this;
  }

  public function name(string $name): SliderBase {
    $this->data->setName(Builder::convert($name));
    return $this;
  }

}
